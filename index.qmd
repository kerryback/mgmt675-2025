
## AI-Assisted Financial Analysis<br>Spring 2025<br><br>![](images/RiceBusiness-transparent-logo-sm.png){width=40%} 


#### Instructor

[Kerry Back](https://kerryback.com)<br> 
[kerryback@gmail.com](mailto: kerryback@gmail.com)<br>
J. Howard Creekmore Professor of Finance and Professor of Economics


#### Meeting Schedule

McNair 214<br>
TTh 12:30 -- 2:00<br>
3/18/2025 -- 4/24/2025

#### Learning Objectives

- Learn to use AI to write python code to perform financial analyses
- Get additional practice in financial analyses
- Obtain a basic understanding of
   - Python
   - Making API calls to LLMs
   - Building simple apps

#### Course Description



This course builds on the knowledge gained in the core finance and applied finance courses and provides additional practice in applying the concepts learned there.  It also provides an introduction to python and to using generative AI.  No prior experience with AI or python is needed.

The "AI" in "AI-Assisted" in the course title refers to generative AI.  AI more broadly defined includes machine learning, which has been used in finance for many years for default prediction, fraud detection, stock selection, and other things.  We will touch on machine learning in this course, but the emphasis is on generative AI (OpenAI, Claude, Gemini, etc.)

Generative AI is directly useful in finance for text analysis.  For example, generative AI is used to assess the sentiment of earnings calls, to analyze changes from year-to-year in text sections of 10k's, etc.  However, most financial analyses are numerical, and generative AI cannot be trusted to do numerical analysis on its own.  Generative AI predicts the next "token" (word, number, subword, ...) in a sequence based on its training.  It has a high probability of making errors in any complicated numerical analysis.
To do numerical analysis with generative AI, we need the numerical calculations to be executed by trustworthy software that is controlled by the text generated by the AI.  

A chatbot for financial analysis is an app that

- accepts user input and routes it to an LLM (large language model),
- receives structed output from the LLM and passes it to numerical software to perform analysis,
- outputs the results to the user,
- accepts additional user input and repeats the process.

We are going to build pseudo-chatbots as [Julius.ai](https://julius.ai/) workflows.  Julius provides the facility to accept user input, communicates with LLMs (including Claude Sonnet 3.5 and 3.7 at the time of this writing), and creates the numerical software.  So, we can focus on the financial analysis.  There are alternative code generation platforms, but at this time Julius provides the best experience, including the ability to install additional python libraries, search the internet, and execute generated code.  We will create Julius workflows to compute the cost of equity capital, do simulation, analyze financial statements, optimize portfolios, perform mutual fund performance evaluation, produce capital budgeting and valuation analyses, design option portfolios, and perform credit risk assessment. Time will be alloted to build workflows during break-outs in class.   

We will also explore building chatbot apps using [Streamlit](https://streamlit.io/).  This is an "extra" part of the course and is not required in any of the assignments.  The purpose is to dig just a little deeper into how finance chatbots can be built.  

There is some randomness in an LLM's code generation process.  To check that the code works, we need to test it on small examples that we can solve by other means.  It is also useful to be able to read the code that is generated.  To facilitate this, some basic instructional videos on python will be provided.  

#### Assignments and Grading

Grades will be based on six group assignments and class participation.  Assignments are due on Thursdays by 11:59 p.m.  Each assignment requires submitting a link to a Julius workflow.  
 

#### Signing up for Julius

Julius.ai provides a 50% academic discount.  Sign up for a free account, then send an email using your Rice email account to [team@julius.ai](mailto:team@julius.ai) and ask for the academic discount.  They will respond with a promo code to use.  The Lite account ($8 per month after discount) allows 250 messages per month and may be ok.  If the message limit becomes binding, you can switch to the Standard account ($18 per month after discount), which allows unlimited messages.   Everything is run in the cloud from a web browser, so there is no software to download. 

#### Honor Code

The Rice University honor code applies to all work in this course.  Use of generative AI is of course permitted.

#### Disability Accommodations

Any student with a documented disability requiring accommodations in this course is encouraged to
contact me outside of class. All discussions will remain confidential. Any adjustments or accommodations
regarding assignments or the final exam must be made in advance. Students with disabilities
should also contact Disability Support Services in the Allen Center.





