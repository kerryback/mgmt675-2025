[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "Kerry Back kerryback@gmail.com J. Howard Creekmore Professor of Finance and Professor of Economics\n\n\n\nMcNair 214 TTh 12:30 – 2:00 3/18/2025 – 4/24/2025\n\n\n\n\nLearn to use AI to write python code to perform financial analyses\nGet additional practice in financial analyses\nObtain a basic understanding of\n\nPython\nMaking API calls to LLMs\nBuilding simple apps\n\n\n\n\n\nThis course builds on the knowledge gained in the core finance and applied finance courses and provides additional practice in applying the concepts learned there. It also provides an introduction to python and to using generative AI. No prior experience with AI or python is needed.\nThe “AI” in “AI-Assisted” in the course title refers to generative AI. AI more broadly defined includes machine learning, which has been used in finance for many years for default prediction, fraud detection, stock selection, and other things. We will touch on machine learning in this course, but the emphasis is on generative AI (OpenAI, Claude, Gemini, etc.)\nGenerative AI is directly useful in finance for text analysis. For example, generative AI is used to assess the sentiment of earnings calls, to analyze changes from year-to-year in text sections of 10k’s, etc. However, most financial analyses are numerical, and generative AI cannot be trusted to do numerical analysis on its own. Generative AI predicts the next “token” (word, number, subword, …) in a sequence based on its training. It has a high probability of making errors in any complicated numerical analysis. To do numerical analysis with generative AI, we need the numerical calculations to be executed by trustworthy software that is controlled by the text generated by the AI.\nA chatbot for financial analysis is an app that\n\naccepts user input and routes it to an LLM (large language model),\nreceives structed output from the LLM and passes it to numerical software to perform analysis,\noutputs the results to the user,\naccepts additional user input and repeats the process.\n\nWe are going to build pseudo-chatbots as Julius.ai workflows. Julius provides the facility to accept user input, communicates with LLMs (including Claude Sonnet 3.5 and 3.7 at the time of this writing), and creates the numerical software. So, we can focus on the financial analysis. There are alternative code generation platforms, but at this time Julius provides the best experience, including the ability to install additional python libraries, search the internet, and execute generated code. We will create Julius workflows to compute the cost of equity capital, do simulation, analyze financial statements, optimize portfolios, perform mutual fund performance evaluation, produce capital budgeting and valuation analyses, design option portfolios, and perform credit risk assessment. Time will be alloted to build workflows during break-outs in class.\nWe will also explore building chatbot apps using Streamlit. This is an “extra” part of the course and is not required in any of the assignments. The purpose is to dig just a little deeper into how finance chatbots can be built.\nThere is some randomness in an LLM’s code generation process. To check that the code works, we need to test it on small examples that we can solve by other means. It is also useful to be able to read the code that is generated. To facilitate this, some basic instructional videos on python will be provided.\n\n\n\nGrades will be based on six group assignments and class participation. Assignments are due on Thursdays by 11:59 p.m. Each assignment requires submitting a link to a Julius workflow.\n\n\n\nJulius.ai provides a 50% academic discount. Sign up for a free account, then send an email using your Rice email account to team@julius.ai and ask for the academic discount. They will respond with a promo code to use. The Lite account ($8 per month after discount) allows 250 messages per month and may be ok. If the message limit becomes binding, you can switch to the Standard account ($18 per month after discount), which allows unlimited messages. Everything is run in the cloud from a web browser, so there is no software to download.\n\n\n\nThe Rice University honor code applies to all work in this course. Use of generative AI is of course permitted.\n\n\n\nAny student with a documented disability requiring accommodations in this course is encouraged to contact me outside of class. All discussions will remain confidential. Any adjustments or accommodations regarding assignments or the final exam must be made in advance. Students with disabilities should also contact Disability Support Services in the Allen Center."
  },
  {
    "objectID": "index.html#ai-assisted-financial-analysis-spring-2025",
    "href": "index.html#ai-assisted-financial-analysis-spring-2025",
    "title": "",
    "section": "",
    "text": "Kerry Back kerryback@gmail.com J. Howard Creekmore Professor of Finance and Professor of Economics\n\n\n\nMcNair 214 TTh 12:30 – 2:00 3/18/2025 – 4/24/2025\n\n\n\n\nLearn to use AI to write python code to perform financial analyses\nGet additional practice in financial analyses\nObtain a basic understanding of\n\nPython\nMaking API calls to LLMs\nBuilding simple apps\n\n\n\n\n\nThis course builds on the knowledge gained in the core finance and applied finance courses and provides additional practice in applying the concepts learned there. It also provides an introduction to python and to using generative AI. No prior experience with AI or python is needed.\nThe “AI” in “AI-Assisted” in the course title refers to generative AI. AI more broadly defined includes machine learning, which has been used in finance for many years for default prediction, fraud detection, stock selection, and other things. We will touch on machine learning in this course, but the emphasis is on generative AI (OpenAI, Claude, Gemini, etc.)\nGenerative AI is directly useful in finance for text analysis. For example, generative AI is used to assess the sentiment of earnings calls, to analyze changes from year-to-year in text sections of 10k’s, etc. However, most financial analyses are numerical, and generative AI cannot be trusted to do numerical analysis on its own. Generative AI predicts the next “token” (word, number, subword, …) in a sequence based on its training. It has a high probability of making errors in any complicated numerical analysis. To do numerical analysis with generative AI, we need the numerical calculations to be executed by trustworthy software that is controlled by the text generated by the AI.\nA chatbot for financial analysis is an app that\n\naccepts user input and routes it to an LLM (large language model),\nreceives structed output from the LLM and passes it to numerical software to perform analysis,\noutputs the results to the user,\naccepts additional user input and repeats the process.\n\nWe are going to build pseudo-chatbots as Julius.ai workflows. Julius provides the facility to accept user input, communicates with LLMs (including Claude Sonnet 3.5 and 3.7 at the time of this writing), and creates the numerical software. So, we can focus on the financial analysis. There are alternative code generation platforms, but at this time Julius provides the best experience, including the ability to install additional python libraries, search the internet, and execute generated code. We will create Julius workflows to compute the cost of equity capital, do simulation, analyze financial statements, optimize portfolios, perform mutual fund performance evaluation, produce capital budgeting and valuation analyses, design option portfolios, and perform credit risk assessment. Time will be alloted to build workflows during break-outs in class.\nWe will also explore building chatbot apps using Streamlit. This is an “extra” part of the course and is not required in any of the assignments. The purpose is to dig just a little deeper into how finance chatbots can be built.\nThere is some randomness in an LLM’s code generation process. To check that the code works, we need to test it on small examples that we can solve by other means. It is also useful to be able to read the code that is generated. To facilitate this, some basic instructional videos on python will be provided.\n\n\n\nGrades will be based on six group assignments and class participation. Assignments are due on Thursdays by 11:59 p.m. Each assignment requires submitting a link to a Julius workflow.\n\n\n\nJulius.ai provides a 50% academic discount. Sign up for a free account, then send an email using your Rice email account to team@julius.ai and ask for the academic discount. They will respond with a promo code to use. The Lite account ($8 per month after discount) allows 250 messages per month and may be ok. If the message limit becomes binding, you can switch to the Standard account ($18 per month after discount), which allows unlimited messages. Everything is run in the cloud from a web browser, so there is no software to download.\n\n\n\nThe Rice University honor code applies to all work in this course. Use of generative AI is of course permitted.\n\n\n\nAny student with a documented disability requiring accommodations in this course is encouraged to contact me outside of class. All discussions will remain confidential. Any adjustments or accommodations regarding assignments or the final exam must be made in advance. Students with disabilities should also contact Disability Support Services in the Allen Center."
  },
  {
    "objectID": "slides.html",
    "href": "slides.html",
    "title": "",
    "section": "",
    "text": "Course Intro (pdf)"
  },
  {
    "objectID": "slides.html#slide-decks",
    "href": "slides.html#slide-decks",
    "title": "",
    "section": "",
    "text": "Course Intro (pdf)"
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "",
    "section": "",
    "text": "Breakout Room Assignments\n\n\n\nDate\nTopics\nHandouts\nWork in Class\nAssignments\n\n\n\n\nTue, Mar 18\nPortfolio optimization\nCourse intro slidesMean-variance slidesExcel example\nJulius\n\n\n\nThur, Mar 20\nReview of portfolio optimizationBreak-outsSimulation and forecasting\nOnline data and python reportSimulation slides\nJulius\n1. Portfolio optimizationSolution 1Solution 2Streamlit versionStreamlit prompt\n\n\nTue, Mar 25\nRetirement planning Break-outsCost of equity capital\nRetirement planning workbookCost of equity slides\n\n\n\n\nThur, Mar 27\nFama-French model\nFama-French slidesMorningstar Quantitative RatingsCorporate Finance and Reality\nJulius\n2. SimulationSolution 1Solution 2Streamlit version\n\n\nTue, Apr 1\nAttribution analysisBreak-outsJulius to Powerpoint Effective promptingScraping SEC filings\nAttribution slidesJulius Powerpoint threadPowerpoint deckGood Enough PromptingEthan Mollick\n\n\n\n\nThur, Apr 3\nGoogle ColabInstalling python StreamlitManusFinancial ratios\nGoogle ColabTesla Form 4 notebook Installing pythontest.pyJulius Streamlit threadStreamlit zipfileManus chatManus Word docFinancial ratios slides\n\n3. Attribution analysis\n\n\nTue, Apr 8\nCapital budgeting\nCapital budgeting slides\n\nRead The Sneaker Project before class\n\n\nThur, Apr 10\nBreak-outsData visualization\nSneaker solutionAI UniversityVisualization slidesfinancials.xlsx\n\n\n\n\nTue, Apr 15\nAI overview\nAI in Private EquityAI Overview slidesReplit appStreamlit app Stanford AI Report podcastembeddings.xlsxStock Returns and LLMs paper\n\n4. Financial ratiosRead Adoption of LLM at Deloitte Canada before class\n\n\nThur, Apr 17\nBreak-outsQuantitative equity investing\nQuant equity slidesstocks.csvGu-Kelly-Xiu paper\n\n\n\n\nTue, Apr 22\nPro forma valuation\nWalmart Valuation slidesWalmart case dataExhibit 4 editedJulius threadWalmart NOPAT and Invested CapitalColab neural network notebook\n\n5. Group project Read Valuing Wal-Mart before class\n\n\nThur, Apr 24\nGroup presentations\n\n\n\n\n\nMon, Apr 28\n\n\n\nPeer assessment\n\n\n\nThe assignments are due by 11:59 pm on Thursdays, except for assignments 4 and 5, which are due by 11:59 pm on Tuesday. Each assignment is a group assignment. The details are on Canvas. Upload a link to a Julius workflow for each assignment.\nAssignment 5: This assignment counts double. Create a Julius workflow to perform some type of financial analysis and produce deliverables (Excel file, jpeg, Word doc, Powerpoint deck, Streamlit app, …). Creativity will be a consideration in grading."
  },
  {
    "objectID": "videos.html",
    "href": "videos.html",
    "title": "",
    "section": "",
    "text": "Google Colab and Python Basics"
  },
  {
    "objectID": "videos.html#section",
    "href": "videos.html#section",
    "title": "",
    "section": "",
    "text": "Data Analysis with Pandas\n\n\n\nPlotting in Python\n\n\n\nUsing APIs of LLMs\n\n\n\nJupyterLab, VS Code, and Cursor\n\n\n\nStreamlit Apps"
  },
  {
    "objectID": "videos.html#google-colab-and-python-basics",
    "href": "videos.html#google-colab-and-python-basics",
    "title": "",
    "section": "",
    "text": "Google Colab and Python Basics"
  },
  {
    "objectID": "videos.html#data-analysis-with-pandas",
    "href": "videos.html#data-analysis-with-pandas",
    "title": "",
    "section": "Data Analysis with Pandas",
    "text": "Data Analysis with Pandas"
  },
  {
    "objectID": "videos.html#data-analysis-with-pandas-coming-soon",
    "href": "videos.html#data-analysis-with-pandas-coming-soon",
    "title": "",
    "section": "Data Analysis with Pandas (coming soon)",
    "text": "Data Analysis with Pandas (coming soon)"
  },
  {
    "objectID": "videos.html#plotting-in-python-coming-soon",
    "href": "videos.html#plotting-in-python-coming-soon",
    "title": "",
    "section": "Plotting in Python (coming soon)",
    "text": "Plotting in Python (coming soon)"
  },
  {
    "objectID": "videos.html#accessing-llm-apis-coming-soon",
    "href": "videos.html#accessing-llm-apis-coming-soon",
    "title": "",
    "section": "Accessing LLM APIs (coming soon)",
    "text": "Accessing LLM APIs (coming soon)"
  },
  {
    "objectID": "videos.html#streamlit-apps-coming-soon",
    "href": "videos.html#streamlit-apps-coming-soon",
    "title": "",
    "section": "Streamlit Apps (coming soon)",
    "text": "Streamlit Apps (coming soon)"
  },
  {
    "objectID": "videos.html#jupyterlab-vs-code-and-cursor-coming-soon",
    "href": "videos.html#jupyterlab-vs-code-and-cursor-coming-soon",
    "title": "",
    "section": "JupyterLab, VS Code, and Cursor (coming soon)",
    "text": "JupyterLab, VS Code, and Cursor (coming soon)"
  },
  {
    "objectID": "videos.html#functions-attributes-and-methods-coming-soon",
    "href": "videos.html#functions-attributes-and-methods-coming-soon",
    "title": "",
    "section": "Functions, Attributes, and Methods (coming soon)",
    "text": "Functions, Attributes, and Methods (coming soon)\n\n\n\n:::"
  },
  {
    "objectID": "videos.html#functions-and-flow-control-coming-soon",
    "href": "videos.html#functions-and-flow-control-coming-soon",
    "title": "",
    "section": "Functions and Flow Control (coming soon)",
    "text": "Functions and Flow Control (coming soon)"
  },
  {
    "objectID": "videos.html#objects-attributes-and-methods-coming-soon",
    "href": "videos.html#objects-attributes-and-methods-coming-soon",
    "title": "",
    "section": "Objects, Attributes, and Methods (coming soon)",
    "text": "Objects, Attributes, and Methods (coming soon)\n\n\n\n:::"
  },
  {
    "objectID": "videos.html#functions-and-flow-control",
    "href": "videos.html#functions-and-flow-control",
    "title": "",
    "section": "Functions and Flow Control",
    "text": "Functions and Flow Control"
  },
  {
    "objectID": "videos.html#objects-attributes-and-methods",
    "href": "videos.html#objects-attributes-and-methods",
    "title": "",
    "section": "Objects, Attributes, and Methods",
    "text": "Objects, Attributes, and Methods"
  },
  {
    "objectID": "videos.html#getting-data-into-and-out-of-python-coming-soon",
    "href": "videos.html#getting-data-into-and-out-of-python-coming-soon",
    "title": "",
    "section": "Getting Data into and out of Python (coming soon)",
    "text": "Getting Data into and out of Python (coming soon)"
  },
  {
    "objectID": "videos.html#local-installation-of-python-and-jupyter-coming-soon",
    "href": "videos.html#local-installation-of-python-and-jupyter-coming-soon",
    "title": "",
    "section": "Local Installation of Python and Jupyter (coming soon)",
    "text": "Local Installation of Python and Jupyter (coming soon)"
  },
  {
    "objectID": "videos.html#vs-code-cursor-and-gemini-data-assist-coming-soon",
    "href": "videos.html#vs-code-cursor-and-gemini-data-assist-coming-soon",
    "title": "",
    "section": "VS Code, Cursor, and Gemini Data Assist (coming soon)",
    "text": "VS Code, Cursor, and Gemini Data Assist (coming soon)"
  },
  {
    "objectID": "mentis.html",
    "href": "mentis.html",
    "title": "",
    "section": "",
    "text": "Mar 27: accesscode = 3321 2469"
  },
  {
    "objectID": "videos.html#getting-data-into-and-out-of-python",
    "href": "videos.html#getting-data-into-and-out-of-python",
    "title": "",
    "section": "Getting Data into and out of Python",
    "text": "Getting Data into and out of Python"
  },
  {
    "objectID": "videos.html#cursor-coming-soon",
    "href": "videos.html#cursor-coming-soon",
    "title": "",
    "section": "Cursor (coming soon)",
    "text": "Cursor (coming soon)"
  },
  {
    "objectID": "videos.html#local-installation-of-python-and-jupyter",
    "href": "videos.html#local-installation-of-python-and-jupyter",
    "title": "",
    "section": "Local Installation of Python and Jupyter",
    "text": "Local Installation of Python and Jupyter"
  }
]